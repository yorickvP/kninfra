# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from kn.rpc import fin_pb2 as kn_dot_rpc_dot_fin__pb2
from kn.rpc import foto_pb2 as kn_dot_rpc_dot_foto__pb2
from kn.rpc import mail_pb2 as kn_dot_rpc_dot_mail__pb2
from kn.rpc import rpc_pb2 as kn_dot_rpc_dot_rpc__pb2
from kn.rpc import util_pb2 as kn_dot_rpc_dot_util__pb2


class GiedoStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Sync = channel.unary_unary(
        '/kn.Giedo/Sync',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.setpass = channel.unary_unary(
        '/kn.Giedo/setpass',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.UserPass.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.ping = channel.unary_unary(
        '/kn.Giedo/ping',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.update_site_agenda = channel.unary_unary(
        '/kn.Giedo/update_site_agenda',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.last_synced = channel.unary_unary(
        '/kn.Giedo/last_synced',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_timestamp__pb2.Timestamp.FromString,
        )


class GiedoServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Sync(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setpass(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ping(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def update_site_agenda(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def last_synced(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GiedoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Sync': grpc.unary_unary_rpc_method_handler(
          servicer.Sync,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'setpass': grpc.unary_unary_rpc_method_handler(
          servicer.setpass,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.UserPass.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'ping': grpc.unary_unary_rpc_method_handler(
          servicer.ping,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'update_site_agenda': grpc.unary_unary_rpc_method_handler(
          servicer.update_site_agenda,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'last_synced': grpc.unary_unary_rpc_method_handler(
          servicer.last_synced,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_timestamp__pb2.Timestamp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kn.Giedo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CiliaStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.setpass = channel.unary_unary(
        '/kn.Cilia/setpass',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.UserPass.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.wolk = channel.unary_unary(
        '/kn.Cilia/wolk',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.WolkChanges.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.unix = channel.unary_unary(
        '/kn.Cilia/unix',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.UsersMap.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.fotoadmin_scan_userdirs = channel.unary_unary(
        '/kn.Cilia/fotoadmin_scan_userdirs',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_foto__pb2.UserDirs.FromString,
        )
    self.fotoadmin_remove_moved_fotos = channel.unary_unary(
        '/kn.Cilia/fotoadmin_remove_moved_fotos',
        request_serializer=kn_dot_rpc_dot_foto__pb2.FotoDesc.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )


class CiliaServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def setpass(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def wolk(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def unix(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fotoadmin_scan_userdirs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fotoadmin_remove_moved_fotos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CiliaServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'setpass': grpc.unary_unary_rpc_method_handler(
          servicer.setpass,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.UserPass.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'wolk': grpc.unary_unary_rpc_method_handler(
          servicer.wolk,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.WolkChanges.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'unix': grpc.unary_unary_rpc_method_handler(
          servicer.unix,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.UsersMap.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'fotoadmin_scan_userdirs': grpc.unary_unary_rpc_method_handler(
          servicer.fotoadmin_scan_userdirs,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=kn_dot_rpc_dot_foto__pb2.UserDirs.SerializeToString,
      ),
      'fotoadmin_remove_moved_fotos': grpc.unary_unary_rpc_method_handler(
          servicer.fotoadmin_remove_moved_fotos,
          request_deserializer=kn_dot_rpc_dot_foto__pb2.FotoDesc.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kn.Cilia', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class DaanStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.postfix = channel.unary_unary(
        '/kn.Daan/postfix',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.UsersMap.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.postfix_slm = channel.unary_unary(
        '/kn.Daan/postfix_slm',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.UsersMap.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.quassel = channel.unary_unary(
        '/kn.Daan/quassel',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.QuasselChanges.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.wiki = channel.unary_unary(
        '/kn.Daan/wiki',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.WikiChanges.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.ldap = channel.unary_unary(
        '/kn.Daan/ldap',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.LdapChanges.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.setpass = channel.unary_unary(
        '/kn.Daan/setpass',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.UserPass.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.fotoadmin_create_event = channel.unary_unary(
        '/kn.Daan/fotoadmin_create_event',
        request_serializer=kn_dot_rpc_dot_foto__pb2.FotoEvent.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.fotoadmin_move_fotos = channel.unary_unary(
        '/kn.Daan/fotoadmin_move_fotos',
        request_serializer=kn_dot_rpc_dot_foto__pb2.FotoDesc.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.fotoadmin_remove_moved_fotos = channel.unary_unary(
        '/kn.Daan/fotoadmin_remove_moved_fotos',
        request_serializer=kn_dot_rpc_dot_foto__pb2.FotoDesc.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )


class DaanServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def postfix(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def postfix_slm(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def quassel(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def wiki(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ldap(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def setpass(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fotoadmin_create_event(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fotoadmin_move_fotos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fotoadmin_remove_moved_fotos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DaanServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'postfix': grpc.unary_unary_rpc_method_handler(
          servicer.postfix,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.UsersMap.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'postfix_slm': grpc.unary_unary_rpc_method_handler(
          servicer.postfix_slm,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.UsersMap.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'quassel': grpc.unary_unary_rpc_method_handler(
          servicer.quassel,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.QuasselChanges.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'wiki': grpc.unary_unary_rpc_method_handler(
          servicer.wiki,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.WikiChanges.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'ldap': grpc.unary_unary_rpc_method_handler(
          servicer.ldap,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.LdapChanges.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'setpass': grpc.unary_unary_rpc_method_handler(
          servicer.setpass,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.UserPass.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'fotoadmin_create_event': grpc.unary_unary_rpc_method_handler(
          servicer.fotoadmin_create_event,
          request_deserializer=kn_dot_rpc_dot_foto__pb2.FotoEvent.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'fotoadmin_move_fotos': grpc.unary_unary_rpc_method_handler(
          servicer.fotoadmin_move_fotos,
          request_deserializer=kn_dot_rpc_dot_foto__pb2.FotoDesc.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'fotoadmin_remove_moved_fotos': grpc.unary_unary_rpc_method_handler(
          servicer.fotoadmin_remove_moved_fotos,
          request_deserializer=kn_dot_rpc_dot_foto__pb2.FotoDesc.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kn.Daan', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class HansStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.maillist = channel.unary_unary(
        '/kn.Hans/maillist',
        request_serializer=kn_dot_rpc_dot_rpc__pb2.MailChanges.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.get_membership = channel.unary_unary(
        '/kn.Hans/get_membership',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_mail__pb2.Membership.FromString,
        )
    self.get_moderated_lists = channel.unary_unary(
        '/kn.Hans/get_moderated_lists',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_mail__pb2.ModeratedLists.FromString,
        )
    self.set_moderation = channel.unary_unary(
        '/kn.Hans/set_moderation',
        request_serializer=kn_dot_rpc_dot_mail__pb2.Moderation.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_util__pb2.Success.FromString,
        )
    self.get_moderator_cookie = channel.unary_unary(
        '/kn.Hans/get_moderator_cookie',
        request_serializer=kn_dot_rpc_dot_mail__pb2.List.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_mail__pb2.ModeratorCookie.FromString,
        )


class HansServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def maillist(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_membership(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_moderated_lists(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def set_moderation(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_moderator_cookie(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HansServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'maillist': grpc.unary_unary_rpc_method_handler(
          servicer.maillist,
          request_deserializer=kn_dot_rpc_dot_rpc__pb2.MailChanges.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'get_membership': grpc.unary_unary_rpc_method_handler(
          servicer.get_membership,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=kn_dot_rpc_dot_mail__pb2.Membership.SerializeToString,
      ),
      'get_moderated_lists': grpc.unary_unary_rpc_method_handler(
          servicer.get_moderated_lists,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=kn_dot_rpc_dot_mail__pb2.ModeratedLists.SerializeToString,
      ),
      'set_moderation': grpc.unary_unary_rpc_method_handler(
          servicer.set_moderation,
          request_deserializer=kn_dot_rpc_dot_mail__pb2.Moderation.FromString,
          response_serializer=kn_dot_rpc_dot_util__pb2.Success.SerializeToString,
      ),
      'get_moderator_cookie': grpc.unary_unary_rpc_method_handler(
          servicer.get_moderator_cookie,
          request_deserializer=kn_dot_rpc_dot_mail__pb2.List.FromString,
          response_serializer=kn_dot_rpc_dot_mail__pb2.ModeratorCookie.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kn.Hans', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class MoniekStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.get_account = channel.unary_unary(
        '/kn.Moniek/get_account',
        request_serializer=kn_dot_rpc_dot_fin__pb2.AccountQuery.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_fin__pb2.Account.FromString,
        )
    self.get_debitors = channel.unary_unary(
        '/kn.Moniek/get_debitors',
        request_serializer=kn_dot_rpc_dot_fin__pb2.DebitorQuery.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_fin__pb2.Debitors.FromString,
        )
    self.get_errors = channel.unary_unary(
        '/kn.Moniek/get_errors',
        request_serializer=kn_dot_rpc_dot_fin__pb2.ErrorQuery.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_fin__pb2.Errors.FromString,
        )
    self.get_years = channel.unary_unary(
        '/kn.Moniek/get_years',
        request_serializer=kn_dot_rpc_dot_fin__pb2.YearQuery.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_fin__pb2.Years.FromString,
        )
    self.get_gnucash_object = channel.unary_unary(
        '/kn.Moniek/get_gnucash_object',
        request_serializer=kn_dot_rpc_dot_fin__pb2.GnucashQuery.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_fin__pb2.GnucashObjects.FromString,
        )
    self.check_names = channel.unary_unary(
        '/kn.Moniek/check_names',
        request_serializer=kn_dot_rpc_dot_fin__pb2.Names.SerializeToString,
        response_deserializer=kn_dot_rpc_dot_fin__pb2.CheckNamesResponse.FromString,
        )


class MoniekServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def get_account(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_debitors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_errors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_years(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_gnucash_object(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def check_names(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MoniekServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'get_account': grpc.unary_unary_rpc_method_handler(
          servicer.get_account,
          request_deserializer=kn_dot_rpc_dot_fin__pb2.AccountQuery.FromString,
          response_serializer=kn_dot_rpc_dot_fin__pb2.Account.SerializeToString,
      ),
      'get_debitors': grpc.unary_unary_rpc_method_handler(
          servicer.get_debitors,
          request_deserializer=kn_dot_rpc_dot_fin__pb2.DebitorQuery.FromString,
          response_serializer=kn_dot_rpc_dot_fin__pb2.Debitors.SerializeToString,
      ),
      'get_errors': grpc.unary_unary_rpc_method_handler(
          servicer.get_errors,
          request_deserializer=kn_dot_rpc_dot_fin__pb2.ErrorQuery.FromString,
          response_serializer=kn_dot_rpc_dot_fin__pb2.Errors.SerializeToString,
      ),
      'get_years': grpc.unary_unary_rpc_method_handler(
          servicer.get_years,
          request_deserializer=kn_dot_rpc_dot_fin__pb2.YearQuery.FromString,
          response_serializer=kn_dot_rpc_dot_fin__pb2.Years.SerializeToString,
      ),
      'get_gnucash_object': grpc.unary_unary_rpc_method_handler(
          servicer.get_gnucash_object,
          request_deserializer=kn_dot_rpc_dot_fin__pb2.GnucashQuery.FromString,
          response_serializer=kn_dot_rpc_dot_fin__pb2.GnucashObjects.SerializeToString,
      ),
      'check_names': grpc.unary_unary_rpc_method_handler(
          servicer.check_names,
          request_deserializer=kn_dot_rpc_dot_fin__pb2.Names.FromString,
          response_serializer=kn_dot_rpc_dot_fin__pb2.CheckNamesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'kn.Moniek', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
